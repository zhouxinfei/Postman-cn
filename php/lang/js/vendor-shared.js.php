<?php

return require 'vendor-shared.js2.php';

return [
    'regex' => [
        '/______/s' => '______',
    ],
    [
//        '`This is a duplicate header and will be overridden by the ${t.key} header added by you.`' => '`这是重复的头, 将由您添加的 ${t.key} 头覆盖.`',
//        '`No one can access this ${t[e]} in your personal workspace using this link unless you invite them.`' => '`除非您邀请他们, 否则没有人可以使用此链接在您的个人工作区中访问此 ${t[e]}.`',
//        '`Couldn’t find ${this.props.userFriendlyEntityName}`' => '`找不到 ${this.props.userFriendlyEntityName}`',
//        '`Couldn’t load your ${this.props.userFriendlyEntityName}`' => '`无法加载您的 ${this.props.userFriendlyEntityName}`',
//        '`Couldn’t find the ${this.props.userFriendlyEntityName}`' => '`找不到 ${this.props.userFriendlyEntityName}`',
//
//        '`${p-2} more ${f.default.pluralize({count:p-2,singular:"comment",plural:"comments"})}`' => '`还有 ${p-2} 条${f.default.pluralize({count:p-2,singular:"评论",plural:"评论"})}`',
//        '`${n} open ${s.default.pluralize({count:n,singular:"comment",plural:"comments"})}`' => '`${n} 条打开的${s.default.pluralize({count:n,singular:"评论",plural:"评论"})}`',
//        '`${g} new ${f.default.pluralize({count:g,singular:"comment",plural:"comments"})}`' => '`${g} 条新${f.default.pluralize({count:g,singular:"评论",plural:"评论"})}`',
//        '`PATH: ${t.endpoint}`' => '`路径: ${t.endpoint}`',
//        '`Error while saving the response: ${e.message||""}`' => '`保存响应时出错: ${e.message||""}`',
//        '`Time difference: ${this.props.model.timeDifference}`' => '`时间差异: ${this.props.model.timeDifference}`',
//        '`This is a duplicate header and will be overridden by the ${e.get(o,[a,"key"],a)} header generated by Postman.`' => '`这是重复的头, 并将被 Postman 生成的 ${e.get(o,[a,"key"],a)} 头覆盖.`',
//        '`We could not find the ${this.props.userFriendlyEntityName} you are looking for.`' => '`我们找不到您要查找的 ${this.props.userFriendlyEntityName}.`',
//        '`You’re using an older version of Postman Desktop Agent which does not support ${se[e]} WebSocket requests. Update the Desktop Agent and try again.`' => '`您使用的是 Postman 桌面代理的旧版本, 该版本不支持 ${se[e]} WebSocket 请求. 更新桌面代理, 然后重试.`',
//        '`Failed: ${a.name}`' => '`失败: ${a.name}`',
//
//        '`People who watch this ${e.get(h.default,[b,"displayName"],"")} will show up here.`' => '`观察此 ${e.get(h.default,[b,"displayName"],"")} 的人会出现在这里.`',
//
//        '`Size: ${h.default.formatSize(o)}`' => '`大小: ${h.default.formatSize(o)}`',
//        '`Time: ${c}`' => '`时间: ${c}`',
//        '`Can not send message: ${e.message}.`' => '`无法发送消息: ${e.message}.`',
//        '`Failed running the collection: ${e.toString()}`' => '`无法运行集合: ${e.toString()}`',
//        '`Failed (${this.props.store.failedValuesCount})`' => '`失败 (${this.props.store.failedValuesCount})`',
//        '`Passed (${this.props.store.passedValuesCount})`' => '`通过 (${this.props.store.passedValuesCount})`',
//        '`Could not find flow with id:${n}`' => '`无法找到带有 id:${n} 的流程`',
//        '`Could not subscribe to flow with id:${n}`' => '`无法使用 id:${n} 订阅流程`',
//        '`Could not find flow model with id:${n}`' => '`无法找到带有 id:${n} 的流模型`',
//        '`Panic: ${n.message}`' => '`恐慌: ${n.message}`',
//        '`${l} ${w.default.pluralize({count:l,singular:"person",plural:"people"})} in this workspace`' => '`${l} 个人在此工作区中`',
//
//        '`${e.get(t,"pageInfo.totalForks")} ${I} of ${t.modelName}`' => '`${e.get(t,"pageInfo.totalForks")} ${I} 于 ${t.modelName}`',
//        '`${e.get(g,"name","Requester")} has been notified of your response.`' => '`${e.get(g,"name","Requester")} 已收到您的回复通知.`',
//        '`${e.title} | Postman API Network`' => '`${e.title} | Postman API 网络`',
//        '`${e} - Private API Network`' => '`${e} - 私有 API 网络`',
//        '`No results found for "${this.props.searchQuery}"`' => '`没有找到 "${this.props.searchQuery}" 的结果`',
//        '`${n.name} (you)`' => '`${n.name} (你)`',
//        '`Folders (${t.length})`' => '`文件夹 (${t.length})`',
//        '`All APIs (${c.length})`' => '`所有 API (${c.length})`',
//        '`Folders (${n.length})`' => '`文件夹 (${n.length})`',
//
//        '`A copy of the \'${s}\' environment will be imported into the selected workspace to simplify using the collection.`' => '`\'${s}\' 环境的一个副本将被导入到选定的工作区以简化集合的使用.`',
//        '`Request for public visibility (${E||0})`' => '`公开可见性请求 (${E||0})`',
//        '`Public workspace${v<=1?"":"s"} (${v||0})`' => '`公共工作区 (${v||0})`',
//        '`Collections with published documentation (${e.get(p,"totalDocumentations",0)})`' => '`已发布文档的集合 (${e.get(p,"totalDocumentations",0)})`',
//        '`Collections with JSON links (${e.get(this.state.collectionLinks,"count",0)})`' => '`带有 JSON 链接的集合 (${e.get(this.state.collectionLinks,"count",0)})`',
//        '`Delete ${l}?`' => '`删除 ${l}?`',
//        '`You’ve updated roles on the **${e.upperFirst(a)}** ${t}.`' => '`您已更新 **${e.upperFirst(a)}** ${t} 上的角色.`',
//        '`You can only assign users an ${e.reduce(this.state.rolesList,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} role on this ${y.MODEL_NAME[this.state.entityType]}. Your plan doesn\'t include access management.`' => '`您只能在此 ${e.reduce(this.state.rolesList,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} 上为用户分配 ${y.MODEL_NAME[this.state.entityType]} 角色. 您的计划不包括访问管理.`',
//        '`Payment will be made via ${i.brand} ending ${i.last4}`' => '`付款将通过以 ${i.last4} 结尾的 ${i.brand}`',
//        '`The ${this.state.paymentMethodToBeRemoved.brand}\n                ending ${this.state.paymentMethodToBeRemoved.last4}\n                won’t be used to collect your payments. You can always add it back.`' => '`${this.state.paymentMethodToBeRemoved.brand}\n                结尾的 ${this.state.paymentMethodToBeRemoved.last4}\n                不会用于收取您的付款. 您可以随时将其添加回来.`',
//        '`Your plan will auto-renew on ${t}`' => '`您的计划将在 ${t} 自动续订`',
//        '`New subtotal: ${g.formatAsCurrency(t)} ${n?"(Excludes Sales Tax)":""}`' => '`新小计: ${g.formatAsCurrency(t)} ${n?"(不包括销售税)":""}`',
//        '`Your plan: ${t.plan_name}`' => '`你的计划: ${t.plan_name}`',
//        '`${s}% sales tax applicable`' => '`${s}% 销售税适用`',
//        '`Project : ${t.variables.repository_name}`' => '`项目 : ${t.variables.repository_name}`',
//        '`Project : ${O.INITIALS_TO_EXPANDED[t.variables.project_slug.substr(0,2)]}/${t.variables.project_slug.substr(t.variables.project_slug.indexOf("/")+1)}`' => '`项目 : ${O.INITIALS_TO_EXPANDED[t.variables.project_slug.substr(0,2)]}/${t.variables.project_slug.substr(t.variables.project_slug.indexOf("/")+1)}`',
//        '`No alert conditions were violated by ‘${p.a.get(i,"label")}’.`' => '`‘${p.a.get(i,"label")}’ 有违反警报条件.`',
//        '`Anyone from the @${t.teamDomains.join(", ")}\n             domain can see and request to join your team.`' => '`@${t.teamDomains.join(", ")} 域中的任何人\n             都可以查看并请求加入您的团队.`',
//        '`${e.length} permissions of a ${t.toLowerCase()}`' => '`${t.toLowerCase()} 的 ${e.length} 个权限`',
//        '`${a?"Hide":"Show"} ${e.permissions.length} permissions`' => '`${a?"隐藏":"显示"} ${e.permissions.length} 个权限`',
//        '`You can only add up to ${t.max_blocks_per_transaction} ${r} at once.`' => '`您一次最多只能添加 ${t.max_blocks_per_transaction} ${r}.`',
//        '`You deleted ${n} from all workspaces.`' => '`您从所有工作区中删除了 ${n}.`',
//        '`You removed ${t} from this workspace.`' => '`您从此工作区中移除了 ${t}.`',
//        '`You deleted version ${n} across all workspaces.`' => '`您在所有工作区中删除了版本 ${n}.`',
//        '`${r} - Private API Network`' => '`${r} - 私有 API 网络`',
//
//        '`${p}: ${n.all<10?"< 10":S.default.convertToUserFriendlyMetric(n.all)} results found for "${r}" in all categories`' => '`${p}: 在所有类别中, 已找到 ${n.all<10?"< 10":wS.default.convertToUserFriendlyMetric(n.all)} 个为 "${r}" 的结果`',
//        '`This variable does not exist in the active session. However, its presence in the ${this.props.userFriendlyEntityName||this.props.entityType} will not be affected.`' => '`该变量在活动会话中不存在. 但是, 它在${this.props.userFriendlyEntityName||this.props.entityType}中的存在不会受到影响.`',
//        '`Use variables to reuse values in different places. Work with the current value of a variable to prevent sharing sensitive values with your team. [Learn more about variable values](${s.SESSION_VARIABLE_DOCS})`' => '`使用变量在不同的地方重用值. 使用变量的当前值以防止与团队共享敏感值. [了解更多关于变量值](${s.SESSION_VARIABLE_DOCS})`',
//
//        '`${e} FAILED on ${this.props.updatedAt}`' => '`${e} 失败于 ${this.props.updatedAt}`',
//        '`${e} PASSED on ${this.props.updatedAt}`' => '`${e} 通过于 ${this.props.updatedAt}`',
//        '` (${e.occurrences} ${y.default.pluralize({count:e.occurrences,singular:"result",plural:"results"})})`' => '` (${e.occurrences} 个结果)`',
//        '`Nothing found for "${this.props.searchedQuery}"`' => '`没有找到与 "${this.props.searchedQuery}" 相关的内容`',
//        '` and ${o-1}\n              ${g.default.pluralize({count:o-1,singular:" other has ",plural:" others have "})}`' => '` 和 ${o-1}\n              ${g.default.pluralize({count:o-1,singular:" 人有 ",plural:" 人有 "})}`',
//        '`Expires on ${e.exp_month}/${e.exp_year}`' => '`到期于 ${e.exp_month}/${e.exp_year}`',
//        '`${e.brand} ending ${e.last4}`' => '`${e.brand} 结尾 ${e.last4}`',
//        '`Error: ${this.details.error.message||this.details.error}`' => '`错误: ${this.details.error.message||this.details.error}`',
//        '`Warning: ${this.details.warning.message||this.details.warning}`' => '`警告: ${this.details.warning.message||this.details.warning}`',
//        '`${e.get(r,"body.data.name")} is now in ${n.name}.`' => '`${e.get(r,"body.data.name")} 现在在 ${n.name}.`',
//
//        '`Once a Community Manager approves your request, the visibility of ${t.name} workspace will be changed to public.`' => '`一旦社区经理批准您的请求, ${t.name} 工作区的可见性将更改为公共.`',
//        '`You can only assign users an ${b} role on this workspace. Your plan doesn\'t include access management.`' => '`您只能在此工作区中为用户分配 ${b} 角色. 您的计划不包括访问管理.`',
//        '`${n} has already requested to change the visibility to Public.`' => '`${n} 已经请求将可见性更改为公共.`',
//        '`The ${a} already exists in this workspace.`' => '`${a} 已存在于此工作区中.`',
//        '`Can\'t move ${a}s from team, private, and public workspaces to a personal workspace.`' => '`无法将 ${a} 从团队、私有和公共工作区移动到个人工作区.`',
//        '`You don\'t have access to move ${a}s to this workspace.`' => '`您无权将 ${a} 移动到此工作区.`',
//
//        '`We could not fetch information about the source ${this.props.controller.modelName}. Please try again.`' => '`我们无法获取有关源 ${this.props.controller.modelName} 的信息. 请再试一次.`',
//
//        '`Get notified about the updates to the original ${e.modelName}.`' => '`获取有关源 ${e.modelName} 更新的通知.`',
//        '`To create fork from a ${e.modelName} in a public workspace, you must make your profile public.\n         The following changes will be made to your profile.`' => '`要在一个公共工作区中从一个 ${e.modelName} 创建分叉, 你必须公开你的个人资料.\n         您的个人资料将进行以下更改.`',
//        '`To fork a ${e.modelName} from a public workspace, you need to have your public profile setup.`' => '`要从一个公共工作区分叉一个 ${e.modelName}, 您需要设置您的公开个人资料.`',
//        '` ${e.get(t,"pageInfo.hiddenForks")} of those aren\'t in this list because they\'re in workspaces you don\'t have access to.`' => '` ${e.get(t,"pageInfo.hiddenForks")} 个不在此列表中, 因为它们位于您无权访问的工作区中.`',
//        '`We could not find the documentation for this ${n}. The collection might have been moved or deleted.`' => '`我们找不到该 ${n} 的文档. 该集合可能已被移动或删除.`',
//        '`There was an error while fetching the documentation for this ${n}. If this problem persists, contact us at help@postman.com`' => '`提取此 ${n} 的文档时出错. 如果此问题仍然存在, 请通过 help@postman.com 与我们联系`',
//        '`Could not resolve any workspace. Error occurred while opening this ${e.get(c.ENTITY_MAP,[n],"element")}`' => '`无法解析任何工作区. 打开此 ${e.get(c.ENTITY_MAP,[n],"element")} 时发生错误`',
//        '`Could not resolve any workspace. No workspace found for this ${e.get(c.ENTITY_MAP,[n],"element")}`' => '`无法解析任何工作区. 找不到此 ${e.get(c.ENTITY_MAP,[n],"element")} 的工作区`',
//        '`Multiple Release Tags(${e})`' => '`多个发布标签(${e})`',
//        '`<a href=\'${m}\'>Another published documentation</a> &nbsp;is already using this custom domain. Please unpublish that before attempting to publish another documentation using this domain.`' => '`<a href=\'${m}\'>另一个已发布的文档</a> 已在使用此自定义域. 请在尝试使用此域发布另一个文档之前取消发布.`',
//        '`Once domain ownership is verified, your documentation will be accessible from this URL.&nbsp;<a href=${g}>Verify Now</a>`' => '`验证域所有权后, 即可从此 URL 访问您的文档.&nbsp;<a href=${g}>立即验证</a>`',
//        '`You\'ve denied the request to change visibility of ${m.name} to public.`' => '`您已拒绝将 ${m.name} 的可见性更改为公共的请求.`',
//        '`${t} has already requested to change the visibility to Public.`' => '`${t} 已经请求将可见性更改为公共.`',
//        '`Remove ${f||""} access`' => '`移除 ${f||""} 访问权限`',
//        '`This ${t} anyway has ${e.get(this.props.rolesList,[n,"displayName"],"")} access to this workspace.`' => '`此 ${t} 无论如何都有 ${e.get(this.props.rolesList,[n,"displayName"],"")} 访问此工作区的权限.`',
//        '`Show all ${o.length} collections `' => '`显示所有 ${o.length} 个集合 `',
//        '`${i.a.capitalize(t)} ${r[t]||"doesn\'t"} match schema`' => '`${i.a.capitalize(t)} ${r[t]||"不"} 匹配架构`',
//        '`${i.a.capitalize(t)} not found in schema. Selecting this change will remove this       ${t} from collection.`' => '`${i.a.capitalize(t)} 在架构中找不到. 选择此更改将从集合中删除此 ${t} .`',
//        '`${r} changes were made to the collection.`' => '`对集合进行了 ${r} 次更改.`',
//        '`${r} change was made to the collection.`' => '`对集合进行了 ${r} 次更改.`',
//        '`There are ${i} issues remaining.`' => '`还有 ${i} 个问题.`',
//        '`There is ${i} issue remaining.`' => '`还有 ${i} 个问题.`',
//        '`${t.availableUpdatesCount} ${d.default.pluralize({count:t.availableUpdatesCount,plural:"issues",singular:"issue"})} found`' => '`发行 ${t.availableUpdatesCount} ${d.default.pluralize({count:t.availableUpdatesCount,plural:"问题",singular:"问题"})}`',
//        '`New API version ${e.get(t,"name")} added to ${i} API`' => '`新的 API 版本 ${e.get(t,"name")} 已添加到 ${i} API`',
//
//        '`Error while importing ${t.name}: ${e.message}`' => '`导入 ${t.name} 时出错: ${e.message}`',
//        '`Connecting to ${this.getServiceTitle()}...`' => '`正在连接到${this.getServiceTitle()}...`',
//        '`The "${n}" parameter you provided is invalid`' => '`您提供的 "${n}" 参数无效`',
//        '`You can now sync changes between  the connected version and ${e.get(this.state.selectedRepo,"name")} repository.`' => '`您现在可以在连接的版本和 ${e.get(this.state.selectedRepo,"name")} 存储库之间同步更改.`',
//        '`You can only assign users an ${e.reduce(this.state.allRoles,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} role on this workspace. Your plan doesn\'t include access management.`' => '`您只能在此工作空间上为用户分配 ${e.reduce(this.state.allRoles,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} 角色. 您的计划不包括访问管理.`',
//        '`Fork ${u.default.capitalize(e.modelName)}`' => '`分叉${({collection:"集合",environment:"环境"})[e.modelName]||e.modelName}`',
//        '`All forks created from this ${t.model} will appear here.`' => '`从此${({collection:"集合",environment:"环境"})[t.model]||t.model}创建的所有分叉都将显示在这里.`',
//        '`Next in this ${t}`' => '`在此${({collection:"集合",folder:"文件夹"})[t]||t}下`',
//        '`Yay! No ${"validationError"===m?"validation errors":"security warnings"} found in the schema.`' => '`耶! 在架构中未发现${"validationError"===m?"验证错误":"安全警告"}.`',
//        '`${"mock"===r?"Mock server":"Monitor"} added`' => '`${"mock"===r?"模拟服务器":"监视器"} 已添加`',
//        '`You ${i?"enabled":"disabled"} team discovery for your team`' => '`您为您的团队${i?"启用":"禁用"}了团队发现功能`',
//        '`Last accessed at ${d.format(e.get(t,"accessedAt"),!1)}`' => '`最后访问于 ${d.format(e.get(t,"accessedAt"),!1)}`',
//        '`Copy ${e.lowerCase(this.props.userFriendlyEntityName)} ID`' => '`拷贝${({globals:"全局",collection:"集合",environment:"环境",folder:"文件夹",request:"请求"})[e.lowerCase(this.props.userFriendlyEntityName)]||e.lowerCase(this.props.userFriendlyEntityName)} ID`',
//        '`This comment refers to a part of the ${"api"===this.props.model?"schema":"request"} that no longer exists.`' => '`此评论指的是不再存在的${"api"===this.props.model?"架构":"请求"}的一部分.`',
//        '`You can only assign users an ${e.reduce(t,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} role on this workspace. Your plan doesn\'t include access management.`' => '`您只能在此工作区中为用户分配 ${e.reduce(t,((e,t)=>(t.isEnabled&&e.push(t.displayName),e)),[]).join(" ,")} 角色. 您的计划不包括访问管理.`',
//        '`Updated ${"apis"===this.state.activeTab?"APIs":this.state.activeTab}`' => '`已更新 ${"apis"===this.state.activeTab?"API":this.state.activeTab}`',
//        '`Make things easier for your teammates with a complete ${e?e+" ":""}description.`' => '`使用完整的${({collection:"集合",folder:"文件夹",request:"请求"})[e]||e}描述可以让您的团队成员更轻松.`',
//        '`${this.props.bodyType} Body`' => '`${({Request:"请求",Response:"响应"})[this.props.bodyType]||this.props.bodyType}正文`',
//        '`Errors (${e})`' => '`错误 (${e})`',
//        '`Warnings (${t})`' => '`警告 (${t})`',
//        '`For APIs using OpenAPI 3.0, we validate ${r[e]}s against the API schema.\n\nWe\'ll support more schema types in the future.`' => '`对于使用 OpenAPI 3.0 的 API, 我们根据 API 架构验证 ${r[e]}.\n\n我们将在未来支持更多架构类型.`',
//        '`Changes saved for ${n} API v.${r}`' => '`为 ${n} API v.${r} 的更改已保存`',
//        '`The "${r}" parameter is in an invalid format`' => '`"${r}" 参数的格式无效`',
//
//        '`You updated ${e.get(s,"name")}.`' => '`您已更新 ${e.get(s,"name")}.`',
//        '`Successfully deleted integration on ${this.name} version.`' => '`已成功删除 ${this.name} 版本上的集成.`',
//        '`There was an unexpected error adding this ${this.type} to the API. Please try again.`' => '`将此 ${this.type} 添加到 API 时出现意外错误. 请再试一次.`',
//        '`There was an unexpected error deleting this ${this.type}. Please try again.`' => '`删除此 ${this.type} 时发生意外错误. 请再试一次.`',
//        '`Couldn’t add ${e.toLower(this.entityTypeMap[this.type])} to the API`' => '`无法将 ${e.toLower(this.entityTypeMap[this.type])} 添加到 API`',
//        '`You added a schema to ${this.apiName}.`' => '`您添加了一个架构到 ${this.apiName}.`',
//        '`You added ${t} to ${this.apiName} version ${this.versionName}`' => '`您已将 ${t} 添加到 ${this.apiName} 版本 ${this.versionName}`',
//        '`${n} invalid import format(s)`' => '`${n} 无效的导入格式`',
//        '`Error while importing ${s.name}: ${e.message}`' => '`导入 ${s.name} 时出错: ${e.message}`',
//        '`Error importing ${s.name} API: ${e.message}`' => '`导入 ${s.name} API 时出错: ${e.message}`',
//        '`A public workspace named **${r}** already exists. Enter a different name for this one.`' => '`一个名为 **${r}** 的公共工作区已经存在. 为此输入一个不同的名称.`',
//        '`Invited ${this.state.members} ${o} to your team`' => '`已邀请 ${this.state.members} ${o} 加入您的团队`',
//        '`You’ve invited ${n} ${i} beyond your team’s capacity.\n            Upgrade your plan to let them join and collaborate in this workspace.`' => '`您邀请的 ${n} ${i} 超出了您团队的能力.\n            升级您的计划, 让他们加入并在此工作区中进行协作.`',
//        '`Inviting ${this.state.members} ${p} to your team`' => '`正在邀请 ${this.state.members} ${p} 加入您的团队`',
//        '`Collections (${this.getSelectedTargetCount("collections")})`' => '`集合 (${this.getSelectedTargetCount("collections")})`',
//        '`Environments (${this.getSelectedTargetCount("environments")})`' => '`环境 (${this.getSelectedTargetCount("environments")})`',
//        '`All ${e.toLower(this.props.label)} (${e.size(this.props.items)})`' => '`所有${e.toLower(this.props.label)} (${e.size(this.props.items)})`',
//        '`Open tabs (${this.getResultCount(this.props.searchedResult.tabs)})`' => '`已打开的标签页 (${this.getResultCount(this.props.searchedResult.tabs)})`',
//        '`Collections (${this.getResultCount(this.props.searchedResult.collections)})`' => '`集合 (${this.getResultCount(this.props.searchedResult.collections)})`',
//        '`Environments (${this.getResultCount(this.props.searchedResult.environments)})`' => '`环境 (${this.getResultCount(this.props.searchedResult.environments)})`',
//        '`Globals (${this.getResultCount(this.props.searchedResult.globals)})`' => '`全局 (${this.getResultCount(this.props.searchedResult.globals)})`',
//        '`Replacing content in ${n} will save any unsaved changes in that ${this.props.type}.`' => '`替换${n}中的内容将保存 ${({collection:"集合","environment":"环境",globals:"全局"})[this.props.type]||this.props.type} 中任何未保存的更改.`',
//        '`FILTER (${this.getFieldLabelText()} FIELDS)`' => '`筛选 (${this.getFieldLabelText()} 字段)`',
//        '` No results found for "${this.props.store.searchQuery}"`' => '` 没有找到 "${this.props.store.searchQuery}" 的结果`',
//        '`${e?"Hide":"Show"} Sidebar (${this.getShortcut()})`' => '`${e?"隐藏":"显示"}侧边栏 (${this.getShortcut()})`',
//
//        '`Your trial ends in ${g} ${d.default.pluralize({count:g,singular:"day",plural:"days"})}. Upgrade your plan to continue collaborating with everyone on your team and get significantly more resources.`' => '`您的试用期将在 ${g} ${d.default.pluralize({count:g,singular:"天",plural:"天"})}内结束. 升级您的计划以继续与团队中的每个人合作并获得更多资源.`',
//        '`${S} ${d.default.pluralize({count:S,singular:"person has",plural:"people have"})} requested to join your team. Approve their requests to let them collaborate on your team.`' => '`已有 ${w} 人申请加入您的团队. 批准他们的请求, 让他们在您的团队中协作.`',
//        '`${n} ${r} in total ${i} invited beyond your team’s capacity. Upgrade your plan to let them join and collaborate on your team.`' => '`${n} ${r} 总共 ${i} 邀请超出您的团队的能力. 升级您的计划, 让他们加入并在您的团队中协作.`',
//        '`${n} ${r} in total ${i} invited beyond your team’s capacity. Get Auto-Flex to collaborate with unlimited people without purchasing slots.`' => '`${n} ${r} 总共 ${i} 邀请超出您的团队的能力. 使用自动伸缩与无限的人协作无需购买位置.`',
//        '`${u.name||u.username||u.email} is now ${l} on ${r} ${i}`' => '`${u.name||u.username||u.email} 现在是 ${l} 在 ${r} ${i}`',
//        '` and ${r-1}\n              ${g.default.pluralize({count:r-1,singular:" other has ",plural:" others have "})}`' => '` 和另外 ${r-1}\n              ${g.default.pluralize({count:r-1,singular:"个人",plural:"个人"})}`',
//        '`Version ${this.props.selectedApiVersion} is already synced with GitHub. Select a different version to continue.`' => '`版本 ${this.props.selectedApiVersion} 已经与 GitHub 同步. 选择一个不同的版本以继续.`',
//        '`${p}: ${n[t]<10?"< 10":S.default.convertToUserFriendlyMetric(n[t])} ${l} found for "${r}"`' => '`${p}: ${n[t]<10?"< 10":S.default.convertToUserFriendlyMetric(n[t])} ${l} 找到 "${r}"`',
//        '`${p}: ${s<10?"< 10":S.default.convertToUserFriendlyMetric(n[t])} ${l} found for "${r}"`' => '`${p}: ${s<10?"< 10":S.default.convertToUserFriendlyMetric(n[t])} ${l} 找到 "${r}"`',

        '______' => '______',
        '______' => '______',
        '______' => '______',
        '______' => '______',
        '______' => '______',
        '______' => '______',
    ],
    [
        "______" => "______",
        "______" => "______",
        "______" => "______",
    ],
    [
        '______' => '______',
        '______' => '______',
    ],
    [
        "______" => "______",
        "______" => "______",
        "______" => "______",
    ],
    [
        "'______'" => "'______'",
        "'______'" => "'______'",
    ],
    [
      '"______"' => '"______"',
        '"______"' => '"______"',
        '"______"' => '"______"',
        '"______"' => '"______"',
    ],
];

// ({globals:"全局",collection:"集合",environment:"环境",folder:"文件夹",request:"请求"})
// ({collection:"集合",folder:"文件夹",request:"请求"})
// ({collection:"集合",environment:"环境"})
// ({collection:"集合","mock server":"模拟服务器",environment:"环境"})
// ({collection:"集合","environment":"环境",globals:"全局"})


/*
     let replace = {
        "Let\'s burn some midnight oil": "让我们开夜车吧",
        "Hey there, night owl": "嘿, 夜猫子",
        "Hey there, early bird": "嗨, 早起的鸟儿",
        "APIs don\'t sleep either": "API 也不会休眠",
        "Good afternoon": "下午好",
        "Rise and shine": "起床喜洋洋",
        "Good evening": "晚上好",
        "Good morning": "早上好",
        "Top of the morning": "早晨最好的时光",
    };
    if(n && n[0] && n[0].value){
        for (let key in replace){
            n[0].value = n[0].value.replace(key, replace[key]);
        }
    }

    let string = 'Good afternoon, 黄连木笛!';
    for (let key in replace){
        string = string.replace(key, replace[key]);
    }
    alert(string);
 */