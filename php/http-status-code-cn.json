{
  "100": {
    "name": "继续",
    "detail": "这意味着服务器已经收到了请求头,并且客户端应继续发送请求正文(在需要发送正文的请求的情况下;例如POST请求). 如果请求正文很大,则在基于不适当的头而已拒绝请求时将其发送到服务器效率不高. 若要让服务器仅根据请求的标头检查是否可以接受该请求,客户端必须在其初始请求中发送Expect: 100-continue作为头,并检查是否在响应中收到100继续状态码,然后继续(或收到417预期失败,因此无法继续)."
  },
  "101": {
    "name": "切换协议",
    "detail": "这意味着请求者已请求服务器切换协议,并且服务器已确认将这样做."
  },
  "102": {
    "name": "处理中(WebDAV) (RFC 2518)",
    "detail": "由于WebDAV请求可能包含许多涉及文件操作的子请求,因此完成请求可能需要很长时间. 该代码表示服务器已接收并正在处理请求,但是尚无响应. 这样可以防止客户端超时并假设请求已丢失."
  },
  "103": {
    "name": "检查点",
    "detail": "此代码用于可恢复HTTP请求建议,以恢复中止的PUT或POST请求."
  },
  "122": {
    "name": "请求URI太长",
    "detail": "这是非标准的仅限IE7的代码,这意味着URI的长度超过了2083个字符的最大长度."
  },
  "200": {
    "name": "OK",
    "detail": "成功HTTP请求的标准响应. 实际响应将取决于所使用的请求方法. 在GET请求中,响应将包含与所请求资源相对应的实体. 在POST请求中,响应将包含描述或包含操作结果的实体."
  },
  "201": {
    "name": "已创建",
    "detail": "该请求已完成,并导致创建了一个新资源."
  },
  "202": {
    "name": "已接受",
    "detail": "该请求已被接受进行处理,但是处理尚未完成. 该请求最终可能会执行,也可能不会执行,因为在实际进行处理时,请求可能被禁止."
  },
  "203": {
    "name": "非权威信息(since HTTP/1.1)",
    "detail": "服务器成功处理了请求,但返回的信息可能来自其他来源."
  },
  "204": {
    "name": "无内容",
    "detail": "服务器成功处理了请求,但未返回任何内容."
  },
  "205": {
    "name": "重置内容",
    "detail": "服务器成功处理了请求,但未返回任何内容. 与204响应不同,此响应要求请求者重置文档视图."
  },
  "206": {
    "name": "部分内容",
    "detail": "由于客户端发送了范围头,因此服务器仅传递部分资源. 范围头被wget等工具用来恢复中断的下载,或者将一个下载分成多个同时进行的流"
  },
  "207": {
    "name": "多状态(WebDAV) (RFC 4918)",
    "detail": "后面的消息主体是XML消息,并且可以包含许多单独的响应代码,具体取决于发出多少子请求."
  },
  "208": {
    "name": "已报告(WebDAV) (RFC 5842)",
    "detail": "DAV绑定的成员已经在对该请求的先前答复中被枚举,并且不再被包括在内."
  },
  "226": {
    "name": "IM已使用(RFC 3229)",
    "detail": "服务器已完成对资源的GET请求,并且响应表示应用于当前实例的一个或多个实例操作的结果."
  },
  "300": {
    "name": "多项选择",
    "detail": "指示客户端可以遵循的资源的多个选项. 例如,它可以用于呈现视频的不同格式选项,具有不同扩展名的列表文件或消除词义歧义."
  },
  "301": {
    "name": "永久移动到",
    "detail": "此请求和所有将来的请求都应定向到给定的URI."
  },
  "302": {
    "name": "已找到",
    "detail": "这是与标准相矛盾的工业实践的一个例子. HTTP/1.0规范(RFC 1945)要求客户端执行临时重定向(原始描述短语为\"临时移动\"),但是流行的浏览器使用303的功能实现了302. 因此,HTTP/1.1添加了状态码303和307来区分这两种行为. 但是,某些Web应用程序和框架使用302状态码就像使用303."
  },
  "303": {
    "name": "看其他",
    "detail": "可以使用GET方法在另一个URI下找到对请求的响应. 当收到响应POST(或PUT/DELETE)的响应时,应假定服务器已接收到数据,并且应该使用单独的GET消息发布重定向."
  },
  "304": {
    "name": "未修改",
    "detail": "指示自上次请求以来尚未修改资源. 通常,HTTP客户端提供类似于If-Modified-Since头的头,以提供比较的时间. 使用此功能可以节省带宽和在服务器和客户端上进行重新处理,因为与服务器正在重新处理的整个页面相比,只发送和接收头数据,然后使用服务器和客户端上的更多带宽再次发送."
  },
  "305": {
    "name": "使用代理(since HTTP/1.1)",
    "detail": "主要出于安全原因,许多HTTP客户端(例如Mozilla和Internet Explorer)不能正确处理带有此状态码的响应."
  },
  "306": {
    "name": "切换代理",
    "detail": "不再使用. 最初的意思是\"后续请求应使用指定的代理\""
  },
  "307": {
    "name": "临时重定向(since HTTP/1.1)",
    "detail": "在这种情况下,应该使用另一个URI重复该请求,但是以后的请求仍可以使用原始URI. 与303相反,重新发出原始请求时,不应更改请求方法. 例如,必须使用另一个POST请求重复POST请求."
  },
  "308": {
    "name": "恢复不完整",
    "detail": "此代码用于可恢复HTTP请求建议,以恢复中止的PUT或POST请求."
  },
  "400": {
    "name": "错误的请求",
    "detail": "由于语法错误,请求无法完成."
  },
  "401": {
    "name": "未经授权",
    "detail": "与403 Forbidden(禁止)相似,但专门用于可能进行身份验证但已失败或尚未提供身份验证的情况. 响应必须包含一个WWW-Authenticate头字段,其中包含适用于所请求资源的质询."
  },
  "402": {
    "name": "需要付款",
    "detail": "保留以备将来使用. 最初的意图是将该代码用作某种形式的数字现金或小额支付方案的一部分,但这并未发生,因此通常不使用此代码. 但是,作为其使用示例,如果MobileMe账户欠款,Apple的MobileMe服务会生成402错误(在Mac OS X控制台日志中为\"httpStatusCode:402\")."
  },
  "403": {
    "name": "禁止",
    "detail": "该请求是合法请求,但是服务器拒绝响应. 与401 Unauthorized(未经授权)的响应不同,身份验证没有任何区别."
  },
  "404": {
    "name": "找不到",
    "detail": "找不到请求的资源,但将来可能再次可用. 客户的后续请求是允许的."
  },
  "405": {
    "name": "方法不被允许",
    "detail": "使用资源不支持的请求方法对资源进行了请求. 例如,在需要通过POST呈现数据的表单上使用GET,或在只读资源上使用PUT."
  },
  "406": {
    "name": "不接受",
    "detail": "根据请求中发送的Accept头,所请求的资源只能生成不可接受的内容."
  },
  "407": {
    "name": "需要代理身份验证",
    "detail": "客户端必须首先使用代理对其进行身份验证."
  },
  "408": {
    "name": "请求超时",
    "detail": "服务器超时,等待请求. 根据W3 HTTP规范: \"客户端在服务器准备等待的时间内没有产生请求. 客户端可以在以后的任何时间重复请求而无需进行修改.\""
  },
  "409": {
    "name": "冲突",
    "detail": "表示由于请求中的冲突(例如编辑冲突)而无法处理该请求."
  },
  "410": {
    "name": "消失了",
    "detail": "指示请求的资源不再可用,并且将不再可用. 当故意删除资源并清除该资源时,应使用此方法. 收到410状态码后,客户端以后不应再请求资源. 诸如搜索引擎之类的客户端应从其索引中删除资源. 大多数用例不需要客户端和搜索引擎清除资源,而是可以使用\"404 Not Found(找不到)\"代替."
  },
  "411": {
    "name": "要求长度指示",
    "detail": "该请求未指定其内容的长度,这是所请求的资源所必需的."
  },
  "412": {
    "name": "先决条件失败",
    "detail": "服务器不满足请求者对请求设置的先决条件之一."
  },
  "413": {
    "name": "请求的实体太大",
    "detail": "该请求大于服务器愿意或能够处理的请求."
  },
  "414": {
    "name": "请求URI太长",
    "detail": "提供的URI太长,服务器无法处理."
  },
  "415": {
    "name": "不支持的媒体类型",
    "detail": "请求实体具有服务器或资源不支持的媒体类型. 例如,客户端将图像上传为image/svg+xml,但是服务器要求图像使用其他格式."
  },
  "416": {
    "name": "所请求的范围无法满足",
    "detail": "客户端要求提供文件的一部分,但是服务器无法提供该部分. 例如,如果客户要求文件的一部分超出文件末尾."
  },
  "417": {
    "name": "预期结果失败",
    "detail": "服务器不能满足Expect请求头字段的要求."
  },
  "418": {
    "name": "我是一个茶壶(RFC 2324)",
    "detail": "该代码在1998年被定义为RFC 2324中的传统IETF愚人节笑话之一,超文本咖啡壶控制协议,并且预计不会由实际的HTTP服务器实现. 但是,确实存在已知的实现."
  },
  "422": {
    "name": "无法处理的实体(WebDAV) (RFC 4918)",
    "detail": "该请求格式正确,但由于语义错误而无法执行."
  },
  "423": {
    "name": "锁定(WebDAV) (RFC 4918)",
    "detail": "正在访问的资源被锁定."
  },
  "424": {
    "name": "依赖失败(WebDAV) (RFC 4918)",
    "detail": "由于前一个请求(例如: 一个PROPPATCH)失败,因此请求失败."
  },
  "425": {
    "name": "无序集合(RFC 3648)",
    "detail": "在\"WebDAV高级集合协议\"[14]的草稿中定义,但在\"Web分布式创作和版本控制(WebDAV)有序集合协议\"[15]中不存在."
  },
  "426": {
    "name": "需要升级(RFC 2817)",
    "detail": "客户端应切换到其他协议,例如 TLS/1.0."
  },
  "428": {
    "name": "需要先决条件",
    "detail": "原始服务器要求该请求是有条件的. 旨在防止\"丢失更新\"问题,即当第三方修改了服务器上的状态,从而导致冲突时,客户端获取资源的状态,将其修改,然后将其放回服务器. [17]在互联网草案中提出."
  },
  "429": {
    "name": "请求太多",
    "detail": "用户在给定的时间内发送了太多请求. 用于速率限制方案. 在互联网草案中提出."
  },
  "431": {
    "name": "请求头字段太大",
    "detail": "该服务器不愿意处理该请求,因为单个头字段或所有头字段加起来都太大了. 在互联网草案中提出."
  },
  "444": {
    "name": "没有响应",
    "detail": "一个Nginx HTTP服务器扩展. 服务器不向客户端返回任何信息,并关闭连接(用于阻止恶意软件)."
  },
  "449": {
    "name": "重试随着",
    "detail": "一个Microsoft扩展. 执行适当的操作后.应重试该请求."
  },
  "450": {
    "name": "被Windows家长控制阻止",
    "detail": "一个Microsoft扩展. 打开Windows家长控制并阻止访问给定网页时,会出现此错误."
  },
  "499": {
    "name": "客户端关闭请求",
    "detail": "一个Nginx HTTP服务器扩展. 引入此代码来记录HTTP服务器处理其请求时客户端关闭连接的情况,从而使服务器无法发送HTTP头."
  },
  "500": {
    "name": "内部服务器错误",
    "detail": "一个通用的错误消息,当没有其他特定消息适合时给出."
  },
  "501": {
    "name": "未执行",
    "detail": "该服务器要么无法识别请求方法,要么缺乏满足请求的能力."
  },
  "502": {
    "name": "错误的网关",
    "detail": "该服务器充当网关或代理,并从上游服务器收到无效响应."
  },
  "503": {
    "name": "服务不可用",
    "detail": "该服务器当前不可用(因为它已超载或已关闭以进行维护). 通常,这是一个临时状态."
  },
  "504": {
    "name": "网关超时",
    "detail": "该服务器充当网关或代理,没有及时收到上游服务器的响应."
  },
  "505": {
    "name": "不支持的HTTP版本",
    "detail": "该服务器不支持请求中使用的HTTP协议版本."
  },
  "506": {
    "name": "服务器存在内部配置错误(RFC 2295)",
    "detail": "请求的透明内容协商会导致循环引用.[21]"
  },
  "507": {
    "name": "存储空间不足(WebDAV) (RFC 4918)",
    "detail": "该服务器无法存储完成请求所需的表示形式."
  },
  "508": {
    "name": "检测到循环(WebDAV) (RFC 5842)",
    "detail": "该服务器在处理请求时检测到死循环(代替208发送)"
  },
  "509": {
    "name": "超出带宽限制(Apache bw/limited extension)",
    "detail": "虽然许多服务器都在使用此状态码,但没有在任何RFC中指定."
  },
  "510": {
    "name": "获取资源所需要的策略并没有被满足(RFC 2774)",
    "detail": "服务器必须满足该请求的附加扩展.[22]"
  },
  "511": {
    "name": "需要网络身份验证",
    "detail": "客户端需要进行身份验证才能获得网络访问权限. 意图通过拦截代理来控制对网络的访问(例如: 用于在通过Wi-Fi热点授予完全互联网访问权限之前要求同意服务条款的\"强制门户\"). 在互联网草案中提出."
  },
  "598": {
    "name": "网络读取超时错误",
    "detail": "此状态码未在任何RFC中指定,但是某些HTTP代理使用此状态码向代理之前的客户端发送代理后的网络读取超时信号"
  },
  "599": {
    "name": "网络连接超时错误[23]",
    "detail": "此状态码未在任何RFC中指定,但是某些HTTP代理使用此状态码向代理之前的客户端发送代理后的网络连接超时信号."
  }
}